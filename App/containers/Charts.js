import React, {Component} from 'react';import {    Alert,    Dimensions,    ListView,    ScrollView,    Image,    View,    StyleSheet,    Text,    Platform,    TouchableOpacity,    RefreshControl,    Animated,    Easing,    ToastAndroid,    Modal,    ActivityIndicator,} from 'react-native';import {connect} from 'react-redux';import { IndicatorViewPager,PagerTitleIndicator } from 'rn-viewpager'import SpeedChart from '../components/Stats/SpeedChart'import TiredChart from '../components/Stats/TiredChart'import DistanceChart from '../components/Stats/DistanceChart'import OilChart from '../components/Stats/OilChart'import LineChart from '../components/Stats/LineChart'import DetailChartInfo from '../components/Stats/DetailChartInfo'import Icon from 'react-native-vector-icons/FontAwesome';import Ionicons from 'react-native-vector-icons/Ionicons';var {height, width} = Dimensions.get('window');class Charts extends Component {    constructor(props) {        super(props);        this.state = {            doingFetch: false,            isRefreshing: false,            fadeAnim: new Animated.Value(1),            bgColor: new Animated.Value(0),            //所有统计            stats:[],            //超速统计            speedStats:[],            //疲劳驾驶            tiredStats:[],            //里程统计            distanceStats:[],            //油耗统计            oilStats:[],            //选中统计            selectedIndex:1,        }    }    navigate2LineChart() {        const { navigator } = this.props;        if (navigator) {            navigator.push({                name: 'LineChart',                component: LineChart,                params: {                }            })        }    }    navigate2DetailChartInfo() {        const { navigator } = this.props;        if (navigator) {            navigator.push({                name: 'DetailChartInfo',                component: DetailChartInfo,                params: {                }            })        }    }    render() {        return (            <View style={{flex:1}}>                <View style={{height:Platform.OS=='ios'?78:48,width:width,backgroundColor:'#387ef5',justifyContent:'center',alignItems:'center',flexDirection:'row',paddingHorizontal:10}}>                    <View style={{flex:3,alignItems:'flex-end',justifyContent:'center'}}><Text style={{color:'#fff',fontSize:20}}>统计分析</Text></View>                    <TouchableOpacity style={{flex:2,alignItems:'flex-end',justifyContent:'center'}}                                      onPress={()=>{                                          this.navigate2LineChart();                                      }}                    ><Ionicons name={'md-pie'} color={'#fff'} size={23}/></TouchableOpacity>                </View>                    <View style={{flex:5,backgroundColor:'#eee'}}>                        <Animated.View style={{opacity: this.state.fadeAnim,height:height-150,paddingBottom:5,}}>                            <IndicatorViewPager                                style={{flex:1,flexDirection: 'column-reverse'}}                                indicator={this._renderTitleIndicator()}                                onPageScroll={this._onPageScroll.bind(this)}                            >                                {<View style={{width:width,height:height,marginTop:10,alignItems:'center',backgroundColor:'#fff'}}>                                    <SpeedChart                                        onNavi={()=>{this.navigate2DetailChartInfo()}}/>                                </View>}                                {<View style={{width:width,height:height,marginTop:10,alignItems:'center',backgroundColor:'#fff'}}>                                    <TiredChart                                        onNavi={()=>{this.navigate2DetailChartInfo()}}/>                                </View>}                                {<View style={{width:width,height:height,marginTop:10,alignItems:'center',backgroundColor:'#fff'}}>                                    <DistanceChart                                        onNavi={()=>{this.navigate2DetailChartInfo()}}/>                                </View>}                                {<View style={{width:width,height:height,marginTop:10,alignItems:'center',backgroundColor:'#fff'}}>                                    <OilChart                                        onNavi={()=>{this.navigate2DetailChartInfo()}}/>                                </View>}                            </IndicatorViewPager>                        </Animated.View>                    </View>            </View>        );    }    _renderTitleIndicator () {        return (            <PagerTitleIndicator                style={styles.indicatorContainer}                trackScroll={true}                itemTextStyle={styles.indicatorText}                itemStyle={{width:width/4}}                selectedItemStyle={{width:width/4}}                selectedItemTextStyle={styles.indicatorSelectedText}                selectedBorderStyle={styles.selectedBorderStyle}                titles={['超速统计', '疲劳驾驶','里程统计','油耗统计']}            />        )    }    _onPageScroll (scrollData) {        let {offset, position} = scrollData        if (position < 0 || position > 1) return    }}var styles = StyleSheet.create({    container:{        flex:1,        backgroundColor:'transparent',    },    indicatorContainer: {        backgroundColor: '#387ef5',        height: 48    },    indicatorText: {        fontSize: 14,        color: 0xFFFFFF99    },    indicatorSelectedText: {        fontSize: 14,        color: 0xFFFFFFFF    },    selectedBorderStyle: {        height: 3,        backgroundColor: 'white'    },    statusBar: {        height: 24,        backgroundColor: 0x00000044    },    toolbarContainer: {        height: 56,        backgroundColor: 0x00000020,        flexDirection: 'row',        alignItems: 'center',        paddingHorizontal: 16    },    backImg: {        width: 16,        height: 17    },    titleTxt: {        marginLeft: 36,        color: 'white',        fontSize: 20    }});module.exports = connect(state=>({        accessToken:state.user.accessToken,        personInfo:state.user.personInfo,    }))(Charts);